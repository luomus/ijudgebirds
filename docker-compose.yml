version: "3.2"

services:
  postgres:
    image: postgres
    restart: always
    environment:
      - "POSTGRES_USER=${PGUSER}"
      - "POSTGRES_PASSWORD=${PGPASSWORD}"
    volumes:
      - "./postgres:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
  taxon:
    build:
      context: ./taxon
      dockerfile: Dockerfile
    restart: always
    volumes:
      - "./taxon/taxon.R:/taxon.R"
    command: "./taxon.R"
    deploy:
      resources:
        limits:
          memory: "100M"
  submit:
    build:
      context: ./submit
      dockerfile: Dockerfile
      args:
      - "PGUSER=${PGUSER}"
      - "PGPASSWORD=${PGPASSWORD}"
    restart: always
    volumes:
      - "./submit/submit.R:/submit.R"
    command: "./submit.R"
    deploy:
      resources:
        limits:
          memory: "100M"
  shiny:
    build:
      context: ./shiny
      dockerfile: Dockerfile
    restart: always
    user: "root"
    volumes:
      - "./app:/srv/shiny-server"
    environment:
       - "VIRTUAL_HOST=${HOST}"
       - "LETSENCRYPT_HOST=${HOST}"
       - "LETSENCRYPT_EMAIL=${EMAIL}"
    deploy:
      resources:
        limits:
          memory: "500M"
  nginxproxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "certs:/etc/nginx/certs:ro"
      - "vhostd:/etc/nginx/vhost.d"
      - "html:/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    environment:
      - "NGINX_PROXY_CONTAINER=nginxproxy"
    volumes:
      - "certs:/etc/nginx/certs"
      - "vhostd:/etc/nginx/vhost.d"
      - "html:/usr/share/nginx/html"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: always

  volumes:
    certs:
    html:
    vhostd:

