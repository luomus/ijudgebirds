version: "3.2"

services:
  postgres:
    image: postgres
    restart: always
    environment:
      - "POSTGRES_USER=${PGUSER}"
      - "POSTGRES_PASSWORD=${PGPASSWORD}"
    volumes:
      - "./postgres:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: "200M"
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - "PGUSER=${PGUSER}"
        - "PGPASSWORD=${PGPASSWORD}"
    restart: always
    volumes:
      - "./api/api.R:/api.R"
    command: "./api.R"
    environment:
      - "VIRTUAL_HOST=api.${HOST}"
      - "LETSENCRYPT_HOST=api.${HOST}"
      - "LETSENCRYPT_EMAIL=${EMAIL}"
    deploy:
      resources:
        limits:
          memory: "400M"
  nginxproxy:
    image: jwilder/nginx-proxy
    container_name: iratebirds_nginxproxy_1
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "certs:/etc/nginx/certs:ro"
      - "vhostd:/etc/nginx/vhost.d"
      - "html:/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    deploy:
      resources:
        limits:
          memory: "100M"
  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    environment:
      - "NGINX_PROXY_CONTAINER=iratebirds_nginxproxy_1"
    volumes:
      - "certs:/etc/nginx/certs:rw"
      - "vhostd:/etc/nginx/vhost.d"
      - "html:/usr/share/nginx/html"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: always
    deploy:
      resources:
        limits:
          memory: "100M"

volumes:
  certs:
  html:
  vhostd:
